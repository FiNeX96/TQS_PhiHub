
services:


#  staff-frontend:
#    build: 
#      context: ./Staff-Frontend
#      dockerfile: Dockerfile
#    volumes:
#      - ./Staff-Frontend:/Staff-Frontend
#    networks:
#      - backend_network
#    ports:
#      - '3000:3000'
#    depends_on:
#      - patient-backend
      
  patient-frontend:
    build: 
      context: ./Patient-Frontend
      dockerfile: Dockerfile
    volumes:
      - ./Patient-Frontend:/Patient-Frontend
    networks:
      - backend_network
    ports:
      - '5173:5173'
    depends_on:
      - patient-backend

  digital-signage:
    build: 
      context: ./Digital-Signage
      dockerfile: Dockerfile
    volumes:
      - ./Digital-Signage:/Digital-Signage
    networks:
      - backend_network
    ports:
      - '3002:80'
    depends_on:
      - patient-backend

  patient-backend:
    build: 
      context: ./Patient-Backend
      dockerfile: Dockerfile
    volumes:
      - ./Patient-Backend:/Patient-Backend
    networks:
      - backend_network
    ports:
      - '8080:8080'
    depends_on:
      - postgres-db


  postgres-db:
    image: postgres:latest
    restart: always
    hostname: postgres-db
    environment:
        - POSTGRES_USER=phihubDB
        - POSTGRES_PASSWORD=phihubDBpass
    ports:
      - '5432:5432'
    volumes:
      - postgres_db:/var/lib/postgresql/data
      - ./Postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - backend_network


volumes:
  postgres_db:
    driver: local   

networks:
  backend_network:
    driver: bridge
